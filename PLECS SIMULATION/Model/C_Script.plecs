Plecs {
  Name          "C_Script"
  Version       "4.9"
  CircuitModel  "ContStateSpace"
  StartTime     "0.0"
  TimeSpan      "1"
  Timeout       ""
  Solver        "auto"
  MaxStep       "1e-3"
  InitStep      "-1"
  FixedStep     "1e-3"
  Refine        "1"
  ZCStepSize    "1e-9"
  RelTol        "1e-7"
  AbsTol        "-1"
  TurnOnThreshold "0"
  NonIdealSwitchResistance "1"
  SyncFixedStepTasks "2"
  UseSingleCommonBaseRate "2"
  LossVariableLimitExceededMsg "1"
  NegativeSwitchLossMsg "2"
  DivisionByZeroMsg "3"
  DatatypeOverflowMsg "2"
  DatatypeInheritanceConflictMsg "1"
  ContSampleTimeConflictMsg "1"
  StiffnessDetectionMsg "2"
  MaxConsecutiveZCs "1000"
  AlgebraicLoopWithStateMachineMsg "2"
  AssertionAction "2"
  FixedPointDatatypeOverride "1"
  InitializationCommands ""
  InitialState  "1"
  SystemState   ""
  TaskingMode   "1"
  TaskConfigurations ""
  CodeGenParameterInlining "2"
  CodeGenFloatingPointFormat "2"
  CodeGenAbsTimeUsageMsg "3"
  CodeGenBaseName ""
  CodeGenOutputDir ""
  CodeGenExtraOpts ""
  CodeGenTarget "Generic"
  CodeGenTargetSettings ""
  ExtendedMatrixPrecision "1"
  MatrixSignificanceCheck "2"
  RemoveUnusedStateSpaceOutputs "1"
  EnableStateSpaceSplitting "2"
  DisplayStateSpaceSplitting "1"
  DiscretizationMethod "2"
  ExternalModeSettings ""
  AlgebraicLoopMethod "1"
  AlgebraicLoopTolerance "1e-6"
  ScriptsDialogGeometry ""
  ScriptsDialogSplitterPos "0"
  Schematic {
    Location      [0, 26; 1536, 780]
    ZoomFactor    1.30957
    SliderPosition [0, 0]
    ShowBrowser   off
    BrowserWidth  100
    Component {
      Type          Scope
      Name          "Scope1"
      Show          on
      Position      [455, 235]
      Direction     up
      Flipped       off
      LabelPosition south
      Location      [0, 26; 1536, 849]
      State         "AAAA/wAAAAD9AAAAAgAAAAEAAAAAAAAAAPwCAAAAA/sAAAAQAFoAbwBvA"
"G0AQQByAGUAYQAAAAAA/////wAAADYA////+wAAABQAUwBhAHYAZQBkAFYAaQBlAHcAcwAAAAAA//"
"///wAAAGgA////+wAAAAwAVAByAGEAYwBlAHMAAAAAAP////8AAABoAP///wAAAAMAAAYAAAAAdfw"
"BAAAAAfsAAAAUAEQAYQB0AGEAVwBpAGQAZwBlAHQBAAAAAAAABgAAAABQAP///wAABgAAAAKjAAAA"
"BAAAAAQAAAAIAAAACPwAAAABAAAAAgAAAAEAAAAOAFQAbwBvAGwAQgBhAHIBAAAAAP////8AAAAAA"
"AAAAA=="
      SavedViews    "AAAAAgAAAAA="
      HeaderState   "{\"DefaultSecSize\":0,\"FirstSecSize\":190,\"Labels\":[],"
"\"VisualIdxs\":[]}"
      PlotPalettes  "AAAAAQAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
      Axes          "1"
      TimeRange     "0.0"
      ScrollingMode "1"
      SingleTimeAxis "1"
      Open          "0"
      Ts            "-1"
      SampleLimit   "0"
      XAxisLabel    "Time / s"
      ShowLegend    "2"
      Axis {
        Name          ""
        AutoScale     1
        MinValue      0
        MaxValue      1
        Signals       {}
        SignalTypes   [ ]
        Untangle      0
        KeepBaseline  off
        BaselineValue 0
      }
      Fourier {
        SingleXAxis       on
        AxisLabel         "Frequency / Hz"
        Scaling           0
        PhaseDisplay      0
        ShowFourierLegend off
        Axis {
          Name          ""
          AutoScale     1
          MinValue      0
          MaxValue      1
          Signals       {}
          Untangle      0
          KeepBaseline  off
          BaselineValue 0
        }
      }
    }
    Component {
      Type          Subsystem
      Name          "Bipolar PWM"
      Show          on
      Position      [370, 235]
      Direction     up
      Flipped       off
      LabelPosition south
      Frame         [-25, -20; 25, 20]
      SampleTime    "-1"
      CodeGenDiscretizationMethod "2"
      CodeGenTarget "Generic"
      MaskIconFrame on
      MaskIconOpaque off
      MaskIconRotates on
      Parameter {
        Variable      "fs"
        Prompt        "Switching frequency"
        Type          FreeText
        Value         "20000"
        Show          on
        Tunable       off
        TabName       ""
      }
      Parameter {
        Variable      "dr"
        Prompt        "Deadtime ratio"
        Type          FreeText
        Value         "0.01"
        Show          off
        Tunable       off
        TabName       ""
      }
      Parameter {
        Variable      "dmin"
        Prompt        "Minimum duty cycle"
        Type          FreeText
        Value         "0.02"
        Show          off
        Tunable       off
        TabName       ""
      }
      Terminal {
        Type          Output
        Position      [29, 0]
        Direction     right
      }
      Terminal {
        Type          Input
        Position      [-25, 0]
        Direction     left
      }
      Schematic {
        Location      [0, 365; 280, 586]
        ZoomFactor    1
        SliderPosition [0, 0]
        ShowBrowser   off
        BrowserWidth  100
        Component {
          Type          CScript
          Name          "Bipolar PWM"
          Show          on
          Position      [115, 75]
          Direction     up
          Flipped       off
          LabelPosition south
          Parameter {
            Variable      "DialogGeometry"
            Value         "[268 171 682 684]"
            Show          off
          }
          Parameter {
            Variable      "NumInputs"
            Value         "1"
            Show          off
          }
          Parameter {
            Variable      "NumOutputs"
            Value         "1"
            Show          off
          }
          Parameter {
            Variable      "NumContStates"
            Value         "0"
            Show          off
          }
          Parameter {
            Variable      "NumDiscStates"
            Value         "1"
            Show          off
          }
          Parameter {
            Variable      "NumZCSignals"
            Value         "0"
            Show          off
          }
          Parameter {
            Variable      "DirectFeedthrough"
            Value         "1"
            Show          off
          }
          Parameter {
            Variable      "Ts"
            Value         "[1/fs, 0;-2, 0]"
            Show          off
          }
          Parameter {
            Variable      "TerminalBasedSampleTimes"
            Value         "1"
            Show          off
          }
          Parameter {
            Variable      "Parameters"
            Value         "1/fs dr dmin"
            Show          off
          }
          Parameter {
            Variable      "LangStandard"
            Value         "2"
            Show          off
          }
          Parameter {
            Variable      "GnuExtensions"
            Value         "2"
            Show          off
          }
          Parameter {
            Variable      "RuntimeCheck"
            Value         "2"
            Show          off
          }
          Parameter {
            Variable      "HighlightLevel"
            Value         "0"
            Show          off
          }
          Parameter {
            Variable      "Declarations"
            Value         "/** Bipolar PWM Version 1.0, 4-5-10\n"
" *Note that multiple sample times are used.\n"
" *The fixed sample time causes a hit at the beginning of each switching cycle"
", i.e. a hit\n"
" *is generated at n*Ts.\n"
" *The variable sample time is used to cause a hit at the PWM transitions with"
"in the cycle.\n"
" */\n"
"\n"
"#include <float.h>\n"
"#include <stdio.h>\n"
"\n"
"\n"
"#define TS ParamRealData(0,0)  //sample period\n"
"#define DEADTIME ParamRealData(1,0)\n"
"#define DMIN ParamRealData(2,0)\n"
"#define M Input(0)   //modulation index\n"
"#define OUT Output(0)  //switch output\n"
"#define STATE DiscState(0)\n"
"#define NEVER DBL_MAX\n"
"\n"
"\n"
"//State names\n"
"typedef enum {\n"
"  Start,\n"
"  Blank1,\n"
"  Low,\n"
"  Blank2,\n"
"  High,\n"
"}state_type;\n"
"static state_type NEXT_STATE;\n"
"\n"
"//Create a duty cycle type with relative on and off times\n"
"typedef struct \n"
"{\n"
"  double M1;\n"
"  double M2;\n"
"} duty;\n"
"static duty DUTY;\n"
"\n"
"\n"
"/*Scales modulation index between [0,1] and calculates M1, M2,\n"
" *the relative high and low times\n"
" */\n"
"void calc_duty_cycles(double m, double deadt_ratio, double dmin)\n"
"{\n"
"  DUTY.M1 = (m + 1)/2; //scale [-1,1] to [0,1]\n"
"  DUTY.M2 = 1 - DUTY.M1;\n"
"  DUTY.M1 = DUTY.M1 - deadt_ratio;\n"
"  DUTY.M2 = DUTY.M2 - deadt_ratio;\n"
"\n"
"  if (DUTY.M1 <= dmin)\n"
"  {\n"
"    DUTY.M1 = dmin;\n"
"    DUTY.M2 = 1 - 2*deadt_ratio - dmin;\n"
"  }\n"
"  else if (DUTY.M2 <= dmin)\n"
"  {\n"
"    DUTY.M2 = dmin;\n"
"    DUTY.M1 = 1 - 2*deadt_ratio - dmin;\n"
"  }\n"
"}\n"
            Show          off
          }
          Parameter {
            Variable      "StartFcn"
            Value         "STATE = Start;\n"
"NextSampleHit = NEVER;"
            Show          off
          }
          Parameter {
            Variable      "OutputFcn"
            Value         "static double T1, T2, T3, T4; //variable hit times"
"\n"
"\n"
"switch ((state_type) STATE)\n"
"{\n"
"\n"
"  //----------------------------------------\n"
"  case Start:  //Start is entered at the hit caused by the fixed step setting"
"\n"
"    \n"
"  if (M < -1 || M > 1)\n"
"      SetErrorMessage(\"Modulation index for bipolar PWM block must be in the"
" range [-1,1].\");\n"
"\n"
"    calc_duty_cycles(M, DEADTIME, DMIN); //calculate and scale DUTY.M1, M2   "
"\n"
"    T1 = CurrentTime + TS*DUTY.M1/2; //hit time for pwm hi to low\n"
"    T2 = T1 + TS*DEADTIME;\n"
"    T3 = T2 + TS*DUTY.M2;\n"
"    T4 = T3 + TS*DEADTIME;\n"
"    OUT = 1;\n"
"    NEXT_STATE = Blank1;\n"
"    NextSampleHit = T1;\n"
"    break;\n"
"\n"
"  //----------------------------------------\n"
"  case Blank1:\n"
"    OUT = 0;\n"
"    NEXT_STATE = Low;\n"
"    NextSampleHit = T2;\n"
"    break;\n"
"\n"
"  //----------------------------------------\n"
"  case Low:\n"
"    OUT = -1;\n"
"    NEXT_STATE = Blank2;\n"
"    NextSampleHit = T3;\n"
"    break;\n"
"\n"
"\n"
"  //---------------------------------------- \n"
"  case Blank2:\n"
"    OUT = 0;\n"
"    NEXT_STATE = High;\n"
"    NextSampleHit = T4;\n"
"    break;\n"
"\n"
"  //----------------------------------------\n"
"  case High:\n"
"    OUT = 1;\n"
"    NEXT_STATE = Start;\n"
"    NextSampleHit = NEVER; //Wait for next fixed sample step hit\n"
"    break;\n"
"\n"
"}"
            Show          off
          }
          Parameter {
            Variable      "UpdateFcn"
            Value         "STATE = NEXT_STATE;"
            Show          off
          }
          Parameter {
            Variable      "DerivativeFcn"
            Value         ""
            Show          off
          }
          Parameter {
            Variable      "TerminateFcn"
            Value         ""
            Show          off
          }
          Parameter {
            Variable      "StoreCustomStateFcn"
            Value         "WriteCustomStateDouble(NextSampleHit);\n"
"WriteCustomStateDouble(DUTY.M1);\n"
"WriteCustomStateDouble(DUTY.M2);"
            Show          off
          }
          Parameter {
            Variable      "RestoreCustomStateFcn"
            Value         "NextSampleHit = ReadCustomStateDouble();\n"
"DUTY.M1 = ReadCustomStateDouble();\n"
"DUTY.M2 = ReadCustomStateDouble();"
            Show          off
          }
        }
        Component {
          Type          Output
          Name          "pwm"
          Show          on
          Position      [190, 75]
          Direction     right
          Flipped       off
          LabelPosition south
          Parameter {
            Variable      "Index"
            Value         "1"
            Show          on
          }
          Parameter {
            Variable      "Width"
            Value         "-1"
            Show          off
          }
        }
        Component {
          Type          Input
          Name          "cmp"
          Show          on
          Position      [45, 75]
          Direction     right
          Flipped       off
          LabelPosition south
          Parameter {
            Variable      "Index"
            Value         "2"
            Show          on
          }
          Parameter {
            Variable      "Width"
            Value         "-1"
            Show          off
          }
        }
        Connection {
          Type          Signal
          SrcComponent  "Bipolar PWM"
          SrcTerminal   2
          DstComponent  "pwm"
          DstTerminal   1
        }
        Connection {
          Type          Signal
          SrcComponent  "cmp"
          SrcTerminal   1
          DstComponent  "Bipolar PWM"
          DstTerminal   1
        }
      }
    }
    Connection {
      Type          Signal
      SrcComponent  "Bipolar PWM"
      SrcTerminal   1
      DstComponent  "Scope1"
      DstTerminal   1
    }
  }
}
DemoSignature "QIeY2QJ7+4HGTZQtotRQskG1lIWLopM94m55ec4Za8Q="
